{"version":3,"sources":["components/App/App.module.css","components/Formula/FormulaEditor.module.css","serviceWorker.js","constants/ActionTypes.js","actions/index.js","components/Formula/FormulaInput.js","components/Formula/FormulaDisplay.js","components/Formula/DisplaySizeSlider.js","components/Formula/DisplayModeCheck.js","utils/latexfmt.js","utils/latexExamples.js","components/Formula/RandomExample.js","components/Formula/index.js","components/Formula/FormulaEditor.js","components/App/index.js","components/App/App.js","reducers/formula.js","reducers/index.js","index.js"],"names":["module","exports","app","formulaWrapper","title","formulaOptions","formulaInput","formulaDisplayWrapper","formulaDisplay","formulaDisplayError","Boolean","window","location","hostname","match","SET_FORMULA","SET_FORMULA_DISPLAYSIZE","TOGGLE_FORMULA_DISPLAYMODE","setFormula","formula","type","actions","payload","tabsize","onKeyDown","evt","keyCode","target","start","selectionStart","end","selectionEnd","value","substring","Array","fill","join","preventDefault","connect","state","dispatch","onchange","_ref","react_default","a","createElement","className","styles","id","inputFormula","onChange","rows","cols","spellCheck","autoComplete","defaultValue","math","displayMode","size","displaySize","html","katex","renderToString","style","fontSize","concat","dangerouslySetInnerHTML","__html","e","ParseError","message","replace","split","initial","optionDisplaySlider","min","max","step","optionDisplayMode","defaultChecked","latexfmt","String","raw","apply","arguments","circle_volume","_templateObject","combination","_templateObject2","complex_trig","_templateObject3","demorgans","_templateObject4","dot_product","_templateObject5","fundamental_calculus","_templateObject6","geometric_series","_templateObject7","geometry","_templateObject8","identity","_templateObject9","law_of_sines","_templateObject10","limit_delta_epsilon","_templateObject11","matrix_determinant","_templateObject12","matrix_multiplication","_templateObject13","perpendicular","_templateObject14","piecewise","_templateObject15","quadratic_formula","_templateObject16","slope","_templateObject17","sum_of_cubes","_templateObject18","taylor_series","_templateObject19","vector","_templateObject20","examples","onclick","fmla","length","ex","console","log","latexExamples","i","Math","floor","random","splice","pop","getRandomFormula","document","getElementById","optionRandomExample","onClick","FormulaEditor","Formula_DisplayModeCheck","Formula_DisplaySizeSlider","RandomExample","Formula_FormulaInput","Formula_FormulaDisplay","App","rel","href","Formula","Component","initialState","formulaReducer","undefined","action","Object","objectSpread","rootReducer","combineReducers","store","createStore","render","es","components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,IAAA,qCCAlBF,EAAAC,QAAA,CAAkBE,eAAA,sCAAAC,MAAA,6BAAAC,eAAA,sCAAAC,aAAA,oCAAAC,sBAAA,6CAAAC,eAAA,sCAAAC,oBAAA,kkCCWEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,8IClBOC,EAAc,cACdC,EAA0B,0BAC1BC,EAA6B,6BCA7BC,EAAa,SAAAC,GAAO,MAAK,CACpCC,KAAMC,EACNC,QAASH,ICCLI,EAAU,EAEhB,SAASC,EAAUC,GACjB,GAAoB,IAAhBA,EAAIC,QAAe,CACrB,IAAIC,EAASF,EAAIE,OACXC,EAAQD,EAAOE,eACfC,EAAMH,EAAOI,aACbC,EAAQL,EAAOK,MACrBL,EAAOK,MAAQA,EAAMC,UAAU,EAAEL,GAASM,MAAMX,GAASY,KAAK,KAAKC,KAAK,IAAMJ,EAAMC,UAAUH,GAC9FH,EAAOE,eAAiBD,EAAQL,EAChCI,EAAOI,aAAeD,EAAMP,EAC5BE,EAAIY,sBACC,GAAoB,IAAhBZ,EAAIC,QAAe,CAC5B,IAAIC,EAASF,EAAIE,OACXC,EAAQD,EAAOE,eACrB,GAAID,IAAUD,EAAOI,aAAc,CACjC,IAAMC,EAAQL,EAAOK,MACjBA,EAAMC,UAAUL,EAAML,EAASK,KAAWM,MAAMX,GAASY,KAAK,KAAKC,KAAK,MAC1ET,EAAOK,MAAQA,EAAMC,UAAU,EAAEL,EAAML,GAAWS,EAAMC,UAAUL,GAClED,EAAOE,eAAiBD,EAAQL,EAChCI,EAAOI,aAAeH,EAAQL,EAC9BE,EAAIY,oBAMZ,IAuBeC,cARE,SAAAC,GAAK,MAAK,CACzBpB,QAASoB,EAAMpB,QAAQA,UAGL,SAAAqB,GAAQ,MAAK,CAC/BC,SAAU,SAAChB,GAAD,OAASe,EAAStB,EAAWO,EAAIE,OAAOK,WAGrCM,CAvBM,SAAAI,GAAA,IAAEvB,EAAFuB,EAAEvB,QAASsB,EAAXC,EAAWD,SAAX,OACnBE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOzC,cACrBqC,EAAAC,EAAAC,cAAA,YAAUG,GAAG,eACXF,UAAWC,IAAOE,aAClBzB,UAAWA,EACX0B,SAAUT,EACVrC,MAAM,uBACN+C,KAAK,IACLC,KAAK,KACLC,WAAW,QACXC,aAAa,UACbC,aAAcpC,wBCTLmB,qBANE,SAAAC,GAAK,MAAK,CACzBiB,KAAMjB,EAAMpB,QAAQA,QACpBsC,YAAalB,EAAMpB,QAAQsC,YAC3BC,KAAMnB,EAAMpB,QAAQwC,cAGPrB,CA5BQ,SAAAI,GAA+B,IAA7Bc,EAA6Bd,EAA7Bc,KAAMC,EAAuBf,EAAvBe,YAAaC,EAAUhB,EAAVgB,KAC1C,IACE,IAAME,EAAOC,IAAMC,eAAeN,EAAM,CAACC,YAAaA,IACtD,OACEd,EAAAC,EAAAC,cAAA,OAAKkB,MAAO,CAACC,SAAQ,GAAAC,OAAKP,EAAL,QACnBZ,UAAWC,IAAOvC,gBAClBmC,EAAAC,EAAAC,cAAA,QAAMqB,wBAAyB,CAACC,OAAQP,MAG5C,MAAOQ,GACP,GAAIA,aAAaP,IAAMQ,WAAY,CACjC,IAAMT,EAAOQ,EAAEE,QAAQC,QAAQ,KAAM,SAClCA,QAAQ,KAAM,QAAQA,QAAQ,KAAM,QACpCC,MAAM,MAAMpC,KAAK,MACpB,OACEO,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOtC,oBACvByD,wBAAyB,CAACC,OAAQP,UCF3BtB,cARE,SAAAC,GAAK,MAAK,CACzBkC,QAASlC,EAAMpB,QAAQwC,cAGL,SAAAnB,GAAQ,MAAK,CAC/BC,SAAU,SAAChB,GAAD,OAASe,GHVgBkB,EGUejC,EAAIE,OAAOK,MHVjB,CAC5CZ,KAAMC,EACNC,QAASoC,KAF0B,IAAAA,KGatBpB,CAfW,SAAAI,KAAE+B,QAAF,IAAWhC,EAAXC,EAAWD,SAAX,OACxBE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO2B,qBACrB/B,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,SAAOzB,KAAK,QAAQuD,IAAI,MAAMC,IAAI,IAAIC,KAAK,MAAMtB,aAAa,MAAML,SAAUT,OCiBnEH,cARE,SAAAC,GAAK,MAAK,CACzBkC,QAASlC,EAAMpB,QAAQsC,cAGL,SAAAjB,GAAQ,MAAK,CAC/BC,SAAU,kBAAMD,EJV6B,CAC7CpB,KAAMC,OIYOiB,CAnBU,SAAAI,GAAA,IAAE+B,EAAF/B,EAAE+B,QAAShC,EAAXC,EAAWD,SAAX,OACvBE,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO+B,mBACrBnC,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,SAAOG,GAAG,mBACR5B,KAAK,WACL8B,SAAUT,EACVsC,gBAAiBN,OCVRO,EAFE,kBAAUC,OAAOC,IAAPC,MAAAF,OAAMG,WAAWb,QAAQ,MAAO,wxICIpD,IAAMc,EAAgBL,EAAHM,KAEbC,EAAcP,EAAHQ,KAEXC,GAAeT,EAAHU,KAEZC,GAAYX,EAAHY,KAETC,GAAcb,EAAHc,KAEXC,GAAuBf,EAAHgB,KAEpBC,GAAmBjB,EAAHkB,KAGhBC,GAAWnB,EAAHoB,KAGRC,GAAWrB,EAAHsB,KAERC,GAAevB,EAAHwB,KAEZC,GAAsBzB,EAAH0B,KAInBC,GAAqB3B,EAAH4B,KAOlBC,GAAwB7B,EAAH8B,KAqBrBC,GAAgB/B,EAAHgC,KAEbC,GAAYjC,EAAHkC,KAOTC,GAAoBnC,EAAHoC,KAEjBC,GAAQrC,EAAHsC,KAILC,GAAevC,EAAHwC,KAEZC,GAAgBzC,EAAH0C,KAEbC,GAAS3C,EAAH4C,KCvEfC,GAAW,GAmBf,IAYevF,eANE,SAAAC,GAAK,MAAK,IAEP,SAAAC,GAAQ,MAAK,CAC/BsF,QAAS,kBAAMtF,EAAStB,GAfL6G,EAXrB,WACE,GAAwB,IAApBF,GAASG,OAEX,IAAK,IAAMC,KADXC,QAAQC,IAAI,cACKC,EAAe,CAC9B,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAY,EAAEX,GAASG,SACjDH,GAASY,OAAOJ,EAAG,EAAGD,EAAcH,IAGxC,OAAOJ,GAASa,MAkB+BC,GAdvCC,SAASC,eAAe,gBAC9B7G,MAAQ+F,EACHA,KAHT,IAAqBA,KAkBNzF,CAZa,SAAAI,GAAA,IAAEoF,EAAFpF,EAAEoF,QAAF,OAC1BnF,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO+F,qBACrBnG,EAAAC,EAAAC,cAAA,UAAQkG,QAASjB,GAAjB,qBCxBWkB,GCKO,kBACpBrG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO5C,gBACrBwC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO3C,OAAvB,0BACAuC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO1C,gBACrBsC,EAAAC,EAAAC,cAACoG,EAAD,MACAtG,EAAAC,EAAAC,cAACqG,EAAD,MACAvG,EAAAC,EAAAC,cAACsG,GAAD,OAEFxG,EAAAC,EAAAC,cAACuG,EAAD,MACAzG,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOxC,uBACrBoC,EAAAC,EAAAC,cAACwG,EAAD,SChBSC,oLCIX,OACE3G,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAO7C,KACrByC,EAAAC,EAAAC,cAAA,QAAM0G,IAAI,WAAWC,KAAK,6CAC1B7G,EAAAC,EAAAC,cAAC4G,GAAD,cALUC,qBCEZC,GAAe,CACnBxI,QAAW,GACXsC,aAAe,EACfE,YAAe,KAyBFiG,OAtBf,WAAoD,IAA5BrH,EAA4B6C,UAAA4C,OAAA,QAAA6B,IAAAzE,UAAA,GAAAA,UAAA,GAAtBuE,GAAcG,EAAQ1E,UAAA4C,OAAA,EAAA5C,UAAA,QAAAyE,EAClD,OAAQC,EAAO1I,MACb,KAAKL,EACH,OAAOgJ,OAAAC,GAAA,EAAAD,CAAA,GACFxH,EADL,CAEEpB,QAAS2I,EAAOxI,UAEpB,KAAKN,EACH,OAAO+I,OAAAC,GAAA,EAAAD,CAAA,GACFxH,EADL,CAEEoB,YAAamG,EAAOxI,UAExB,KAAKL,EACH,OAAO8I,OAAAC,GAAA,EAAAD,CAAA,GACFxH,EADL,CAEEkB,aAAclB,EAAMkB,cAExB,QACE,OAAOlB,ICvBE0H,GAJKC,YAAgB,CAClC/I,QAASyI,KCKLO,GAAQC,YAAYH,IAE1BI,iBACE1H,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAUH,MAAOA,IACfxH,EAAAC,EAAAC,cAAC0H,GAAD,OAEF3B,SAASC,eAAe,ShBkHpB,kBAAmB2B,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.76736d93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__12qws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formulaWrapper\":\"FormulaEditor_formulaWrapper__2MAe0\",\"title\":\"FormulaEditor_title__DKEy-\",\"formulaOptions\":\"FormulaEditor_formulaOptions__25AG7\",\"formulaInput\":\"FormulaEditor_formulaInput__11beu\",\"formulaDisplayWrapper\":\"FormulaEditor_formulaDisplayWrapper__323Cl\",\"formulaDisplay\":\"FormulaEditor_formulaDisplay__2Zm9A\",\"formulaDisplayError\":\"FormulaEditor_formulaDisplayError__1dchW\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const SET_FORMULA = 'SET_FORMULA'\nexport const SET_FORMULA_DISPLAYSIZE = 'SET_FORMULA_DISPLAYSIZE'\nexport const TOGGLE_FORMULA_DISPLAYMODE = 'TOGGLE_FORMULA_DISPLAYMODE'","import * as actions from '../constants/ActionTypes'\n\nexport const setFormula = formula => ({\n  type: actions.SET_FORMULA,\n  payload: formula,\n})\n\nexport const setFormulaDisplaySize = size => ({\n  type: actions.SET_FORMULA_DISPLAYSIZE,\n  payload: size,\n})\n\nexport const toggleFormulaDisplayMode = () => ({\n  type: actions.TOGGLE_FORMULA_DISPLAYMODE,\n})","import React from 'react'\nimport { connect } from 'react-redux'\nimport styles from './FormulaEditor.module.css'\nimport { setFormula } from '../../actions'\n\nconst tabsize = 2;\n\nfunction onKeyDown(evt) {\n  if (evt.keyCode === 9) { // handle tab\n    let target = evt.target;\n    const start = target.selectionStart;\n    const end = target.selectionEnd;\n    const value = target.value;\n    target.value = value.substring(0,start) + Array(tabsize).fill(' ').join('') + value.substring(end);\n    target.selectionStart = start + tabsize;\n    target.selectionEnd = end + tabsize;\n    evt.preventDefault();\n  } else if (evt.keyCode === 8) { // handle backspace\n    let target = evt.target;\n    const start = target.selectionStart;\n    if (start === target.selectionEnd) {\n      const value = target.value;\n      if (value.substring(start-tabsize, start) === Array(tabsize).fill(' ').join('')) {\n        target.value = value.substring(0,start-tabsize) + value.substring(start);\n        target.selectionStart = start - tabsize;\n        target.selectionEnd = start - tabsize;\n        evt.preventDefault();\n      }\n    }\n  }\n}\n\nconst FormulaInput = ({formula, onchange}) => (\n  <div className={styles.formulaInput}>\n    <textarea id=\"formulaInput\"\n      className={styles.inputFormula} \n      onKeyDown={onKeyDown}\n      onChange={onchange}\n      title=\"Type LaTeX code here\"\n      rows=\"6\"\n      cols=\"50\"\n      spellCheck=\"false\"\n      autoComplete=\"disable\"\n      defaultValue={formula}></textarea>\n  </div>\n)\n\nconst mapState = state => ({\n  formula: state.formula.formula\n})\n\nconst mapDispatch = dispatch => ({\n  onchange: (evt) => dispatch(setFormula(evt.target.value)),\n})\n\nexport default connect(mapState, mapDispatch)(FormulaInput)","import React from 'react'\nimport { connect } from 'react-redux'\nimport katex from 'katex'\nimport 'katex/dist/katex.min.css';\nimport styles from './FormulaEditor.module.css'\n\nconst FormulaDisplay = ({math, displayMode, size}) => {\n  try {\n    const html = katex.renderToString(math, {displayMode: displayMode});\n    return (\n      <div style={{fontSize: `${size}rem`}}\n        className={styles.formulaDisplay} >\n        <span dangerouslySetInnerHTML={{__html: html}} />\n      </div>\n    )\n  } catch (e) {\n    if (e instanceof katex.ParseError) {\n      const html = e.message.replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")\n        .split(': ').join('\\n');\n      return (\n        <pre className={styles.formulaDisplayError}\n        dangerouslySetInnerHTML={{__html: html}} />\n      )\n    }\n  }\n}\n\nconst mapState = state => ({\n  math: state.formula.formula,\n  displayMode: state.formula.displayMode,\n  size: state.formula.displaySize,\n})\n\nexport default connect(mapState)(FormulaDisplay)\n\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { setFormulaDisplaySize } from '../../actions'\nimport styles from './FormulaEditor.module.css'\n\nconst DisplaySizeSlider = ({initial, onchange}) => (\n  <div className={styles.optionDisplaySlider}>\n    <div>Size:</div>\n    <input type=\"range\" min=\"0.4\" max=\"7\" step=\"0.2\" defaultValue=\"1.4\" onChange={onchange} />\n  </div>\n)\n\nconst mapState = state => ({\n  initial: state.formula.displaySize\n})\n\nconst mapDispatch = dispatch => ({\n  onchange: (evt) => dispatch(setFormulaDisplaySize(evt.target.value)),\n})\n\nexport default connect(mapState, mapDispatch)(DisplaySizeSlider)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { toggleFormulaDisplayMode } from '../../actions'\nimport styles from './FormulaEditor.module.css'\n\n\nconst DisplayModeCheck = ({initial, onchange}) => (\n  <div className={styles.optionDisplayMode}>\n    <div>Inline Style:</div>\n    <input id=\"inlineStyleCheck\" \n      type=\"checkbox\" \n      onChange={onchange}\n      defaultChecked={!initial} >\n    </input>\n  </div>\n)\n\nconst mapState = state => ({\n  initial: state.formula.displayMode\n})\n\nconst mapDispatch = dispatch => ({\n  onchange: () => dispatch(toggleFormulaDisplayMode())\n})\n\nexport default connect(mapState, mapDispatch)(DisplayModeCheck)","const latexfmt = (...a) => String.raw(...a).replace('\\\\`', '`');\n\nexport default latexfmt","import latexfmt from './latexfmt'\n\n\n\nexport const circle_volume = latexfmt`V = \\frac{4}{3}\\pi r^3`\n\nexport const combination = latexfmt`\\binom{n}{k} = \\frac{n!}{k!(n-k)!}`\n\nexport const complex_trig = latexfmt`re^{i\\theta} = r(\\cos\\theta + i\\sin\\theta)`\n\nexport const demorgans = latexfmt`\\lnot (p \\land q) \\iff (\\lnot p \\lor \\lnot q)`\n\nexport const dot_product = latexfmt`\\langle 2,6,-1\\rangle \\cdot \\langle -3,4,5\\rangle = 13`\n\nexport const fundamental_calculus = latexfmt`\\int_a^b f'(x)dx = f(b) - f(a)`\n\nexport const geometric_series = latexfmt`\\sum_{i=1}^n\\left(a\\cdot r^n\\right)\n= \\frac{a(1 - r^n)}{1-r}`\n\nexport const geometry = latexfmt`\\triangle{ABC} \\cong \\triangle{DEF}\n\\implies m\\angle{CAB} = m\\angle{FDE}`\n\nexport const identity = latexfmt`e^{i\\pi}+1=0`\n\nexport const law_of_sines = latexfmt`\\frac{\\sin A}{a} = \\frac{\\sin B}{b} = \\frac{\\sin C}{c}`\n\nexport const limit_delta_epsilon = latexfmt`\\forall\\ \\epsilon > 0, x \\in \\mathbb{R} \\\\\n\\exists\\ \\delta > 0 \\text{ such that } \\\\\n0 < |x-c| < \\delta \\implies |f(x) - L| < \\epsilon`\n\nexport const matrix_determinant = latexfmt`\\left|\\begin{array}{c c c}\n  a & b & c \\\\\n  d & e & f \\\\\n  g & h & i \\\\\n\\end{array}\\right|\n= aei + bfg + cdh - afh - bdi - ceg`\n\nexport const matrix_multiplication = latexfmt`\\left[\n  \\begin{array}{rr}\n    1 & -3 \\\\\n    2 & 5\n  \\end{array}\n\\right]\n\\cdot\n\\left[\n  \\begin{array}{r}\n    x \\\\\n    y\n  \\end{array}\n\\right]\n=\n\\left[\n  \\begin{array}{r}\n    x-3y \\\\\n    2x+5y\n  \\end{array}\n\\right]`\n\nexport const perpendicular = latexfmt`\\overleftrightarrow{AB} \\perp \\overline{BC} \\iff m\\angle{ABC} = 90^\\circ`\n\nexport const piecewise = latexfmt`a_{n+1} = \\left\\{\n  \\begin{array}{l l}\n    a_n \\div 2 & \\text{ if $a_n$ is even} \\\\\n      3a_n + 1 & \\text{ if $a_n$ is odd} \\\\\n  \\end{array}\n\\right.`\n\nexport const quadratic_formula = latexfmt`x = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}`\n\nexport const slope = latexfmt`\\frac{\\text{rise}}{\\text{run}} = \n\\frac{\\Delta y}{\\Delta x} = \n\\frac{y_2 - y_1}{x_2 - x_1}`\n\nexport const sum_of_cubes = latexfmt`(a^3 + b^3) = (a + b)(a^2 - ab + b^2)`\n\nexport const taylor_series = latexfmt`\\sum_{n=0}^{\\infty}\\frac{f^{(n)}(a)}{n!}(x-a)^n`\n\nexport const vector = latexfmt`\\vec{u} = \\langle x,y \\rangle , \\quad\n|\\vec{u}| = \\sqrt{x^2 + y^2}`","import React from 'react'\nimport { connect } from 'react-redux'\nimport styles from './FormulaEditor.module.css'\nimport { latexExamples } from '../../utils'\nimport { setFormula } from '../../actions'\n\nlet examples = [];\n\nfunction getRandomFormula() {\n  if (examples.length === 0) {\n    console.log('restocking')\n    for (const ex in latexExamples) {\n      const i = Math.floor(Math.random() * (1+examples.length))\n      examples.splice(i, 0, latexExamples[ex])\n    }\n  }\n  return examples.pop();\n}\n\nfunction typeFormula(fmla) {\n  let a = document.getElementById('formulaInput');\n  a.value = fmla;\n  return fmla;\n}\n\nconst RandomExampleButton = ({onclick}) => (\n  <div className={styles.optionRandomExample}>\n    <button onClick={onclick}>Random Example</button>\n  </div>\n)\n\nconst mapState = state => ({})\n\nconst mapDispatch = dispatch => ({\n  onclick: () => dispatch(setFormula(typeFormula(getRandomFormula())))\n})\n\nexport default connect(mapState, mapDispatch)(RandomExampleButton)","//import FormulaInput from './FormulaInput'\nimport FormulaEditor from './FormulaEditor'\n\nexport default FormulaEditor","import React from 'react'\nimport styles from './FormulaEditor.module.css'\nimport FormulaInput from './FormulaInput'\nimport FormulaDisplay from './FormulaDisplay'\nimport DisplaySizeSlider from './DisplaySizeSlider'\nimport DisplayModeCheck from './DisplayModeCheck'\nimport RandomExampleButton from './RandomExample'\n\nconst FormulaEditor = () => (\n  <div className={styles.formulaWrapper}>\n    <div className={styles.title}>Formula Editor (LaTeX)</div>\n    <div className={styles.formulaOptions}>\n      <DisplayModeCheck />\n      <DisplaySizeSlider />\n      <RandomExampleButton />\n    </div>\n    <FormulaInput />\n    <div className={styles.formulaDisplayWrapper}>\n      <FormulaDisplay />\n    </div>\n  </div>\n)\n\nexport default FormulaEditor\n","import App from './App.js'\n\nexport default App","import React, { Component } from 'react';\nimport styles from './App.module.css';\nimport FormulaEditor from '../Formula'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className={styles.app}>\n        <link rel=\"text/css\" href=\"../node_modules/katex/dist/katex.min.css\"></link>\n        <FormulaEditor />\n      </div>\n      \n    );\n  }\n}\n\nexport default App;","import {\n  SET_FORMULA,\n  SET_FORMULA_DISPLAYSIZE,\n  TOGGLE_FORMULA_DISPLAYMODE,\n} from '../constants/ActionTypes'\n\nconst initialState = {\n  'formula': '',\n  'displayMode': true,\n  'displaySize': 1.5,\n}\n\nfunction formulaReducer(state=initialState, action) {\n  switch (action.type) {\n    case SET_FORMULA:\n      return {\n        ...state, \n        formula: action.payload, \n      }\n    case SET_FORMULA_DISPLAYSIZE:\n      return {\n        ...state, \n        displaySize: action.payload,\n      }\n    case TOGGLE_FORMULA_DISPLAYMODE:\n      return {\n        ...state, \n        displayMode: !state.displayMode,\n      }\n    default:\n      return state\n  }\n}\n\nexport default formulaReducer\n","import { combineReducers } from 'redux'\nimport formulaReducer from './formula'\n\nconst rootReducer = combineReducers({\n  formula: formulaReducer,\n})\n\nexport default rootReducer","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './components/App';\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister();"],"sourceRoot":""}