{"version":3,"sources":["components/FormulaEditor/FormulaEditor.module.css","serviceWorker.js","components/FormulaEditor/dumbcomponents/DisplaySettings.js","components/FormulaEditor/dumbcomponents/FormulaDisplay.js","components/FormulaEditor/dumbcomponents/FormulaInput.js","utils/latexfmt.js","utils/latexExamples.js","components/FormulaEditor/dumbcomponents/RandomExample.js","actions/formulaEditor.js","components/FormulaEditor/index.js","components/FormulaEditor/FormulaEditor.js","App.js","reducers/formulaEditor.js","reducers/index.js","index.js"],"names":["module","exports","formulaWrapper","formulaWrapperRight","title","formulaOptions","formulaInput","formulaDisplayWrapper","formulaDisplay","formulaDisplayError","Boolean","window","location","hostname","match","DisplayModeCheck","_ref","displayMode","toggleDisplayMode","react_default","a","createElement","className","styles","optionDisplayMode","id","type","onChange","defaultChecked","DisplaySizeSlider","_ref2","setDisplaySize","optionDisplaySlider","min","max","step","defaultValue","evt","target","value","FormulaDisplay","formula","displaySize","html","katex","renderToString","style","fontSize","concat","dangerouslySetInnerHTML","__html","e","ParseError","message","replace","split","join","color","toString","tabsize","onKeyDown","keyCode","start","selectionStart","end","selectionEnd","substring","Array","fill","preventDefault","FormulaInput","setFormula","inputFormula","rows","spellCheck","autoComplete","latexfmt","String","raw","apply","arguments","circle_volume","_templateObject","combination","_templateObject2","complex_trig","_templateObject3","demorgans","_templateObject4","dot_product","_templateObject5","fundamental_calculus","_templateObject6","geometric_series","_templateObject7","geometry","_templateObject8","identity","_templateObject9","law_of_sines","_templateObject10","limit_delta_epsilon","_templateObject11","matrix_determinant","_templateObject12","matrix_multiplication","_templateObject13","perpendicular","_templateObject14","piecewise","_templateObject15","quadratic_formula","_templateObject16","slope","_templateObject17","sum_of_cubes","_templateObject18","taylor_series","_templateObject19","vector","_templateObject20","examples","RandomExampleButton","optionRandomExample","onClick","fmla","length","ex","latexExamples","i","Math","floor","random","splice","pop","getRandomFormula","document","getElementById","SET_FORMULA","SET_DISPLAYSIZE","TOGGLE_DISPLAYMODE","TOGGLE_AUTOSCALE","SCALE_DISPLAYSIZE","SET_DISPLAYPOSITION","FormulaEditor","connect","state","formulaEditor","displayPosition","dispatch","val","payload","setDisplayPosition","pos","DisplaySettings_DisplayModeCheck","DisplaySettings_DisplaySizeSlider","RandomExample","dumbcomponents_FormulaInput","dumbcomponents_FormulaDisplay","App","components_FormulaEditor","initialState","autoScale","undefined","action","Object","objectSpread","rootReducer","combineReducers","store","createStore","render","es","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4f092dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formulaWrapper\":\"FormulaEditor_formulaWrapper__2f4By\",\"formulaWrapperRight\":\"FormulaEditor_formulaWrapperRight__1w5jJ\",\"title\":\"FormulaEditor_title__2MKlg\",\"formulaOptions\":\"FormulaEditor_formulaOptions__26V8n\",\"formulaInput\":\"FormulaEditor_formulaInput__3KtUb\",\"formulaDisplayWrapper\":\"FormulaEditor_formulaDisplayWrapper__2PtTs\",\"formulaDisplay\":\"FormulaEditor_formulaDisplay__2XK4C\",\"formulaDisplayError\":\"FormulaEditor_formulaDisplayError__3v1E4\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport styles from '../FormulaEditor.module.css'\n\nconst DisplayModeCheck = ({ displayMode, toggleDisplayMode }) => (\n  <div className={styles.optionDisplayMode}>\n    <div>Inline Style:</div>\n    <input id=\"inlineStyleCheck\" \n      type=\"checkbox\" \n      onChange={toggleDisplayMode}\n      defaultChecked={!displayMode} >\n    </input>\n  </div>\n)\n\nconst DisplaySizeSlider = ({ setDisplaySize }) => (\n  <div className={styles.optionDisplaySlider}>\n    <div>Size:</div>\n    <input \n      type=\"range\" \n      min=\"0.4\" \n      max=\"7\" \n      step=\"0.2\" \n      defaultValue=\"1.4\" \n      onChange={(evt) => setDisplaySize(evt.target.value)} />\n  </div>\n)\n\nconst DisplayPositionSelect = ({ setDisplayPosition }) => (\n  <div className={styles.optionDisplayPosition}>\n    <div>Display: </div>\n    <select>\n      <option value='below' \n        onClick={() => setDisplayPosition('below')}>\n        Below\n      </option>\n      <option value='right'\n        onClick={() => setDisplayPosition('right')}>\n        Right\n      </option>\n    </select>\n  </div>\n)\n\nexport {\n  DisplayModeCheck,\n  DisplaySizeSlider,\n  DisplayPositionSelect,\n}","import React from 'react'\nimport katex from 'katex'\nimport 'katex/dist/katex.min.css';\nimport styles from '../FormulaEditor.module.css'\n\nconst FormulaDisplay = ({formula, displayMode, displaySize}) => {\n  try {\n    const html = katex.renderToString(formula, {displayMode: displayMode});\n    return (\n      <div style={{fontSize: `${displaySize}rem`}}\n        className={styles.formulaDisplay} >\n        <span dangerouslySetInnerHTML={{__html: html}} />\n      </div>\n    )\n  } catch (e) {\n    if (e instanceof katex.ParseError) {\n      const html = e.message.replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\")\n        .split(': ').join('\\n');\n      return (\n        <pre className={styles.formulaDisplayError}\n        dangerouslySetInnerHTML={{__html: html}} />\n      )\n    } else {\n      return <p style={{color: 'red'}}>{e.toString()}</p>\n    }\n  }\n}\n\nexport default FormulaDisplay","import React from 'react'\nimport styles from '../FormulaEditor.module.css'\n\nconst tabsize = 2;\n\nfunction onKeyDown(evt) {\n  if (evt.keyCode === 9) { // handle tab\n    let target = evt.target;\n    const start = target.selectionStart;\n    const end = target.selectionEnd;\n    const value = target.value;\n    target.value = value.substring(0,start) + Array(tabsize).fill(' ').join('') + value.substring(end);\n    target.selectionStart = start + tabsize;\n    target.selectionEnd = end + tabsize;\n    evt.preventDefault();\n  } else if (evt.keyCode === 8) { // handle backspace\n    let target = evt.target;\n    const start = target.selectionStart;\n    if (start === target.selectionEnd) {\n      const value = target.value;\n      if (value.substring(start-tabsize, start) === Array(tabsize).fill(' ').join('')) {\n        target.value = value.substring(0,start-tabsize) + value.substring(start);\n        target.selectionStart = start - tabsize;\n        target.selectionEnd = start - tabsize;\n        evt.preventDefault();\n      }\n    }\n  }\n}\n\nconst FormulaInput = ({formula, setFormula}) => (\n  <div className={styles.formulaInput}>\n    <textarea id=\"formulaInput\"\n      className={styles.inputFormula} \n      onKeyDown={onKeyDown}\n      onChange={(evt) => setFormula(evt.target.value)}\n      title=\"Type LaTeX code here\"\n      rows=\"6\"\n      spellCheck=\"false\"\n      autoComplete=\"disable\"\n      defaultValue={formula}></textarea>\n  </div>\n)\n\nexport default FormulaInput","const latexfmt = (...a) => String.raw(...a).replace('\\\\`', '`');\n\nexport default latexfmt","import latexfmt from './latexfmt'\n\n\n\nexport const circle_volume = latexfmt`V = \\frac{4}{3}\\pi r^3`\n\nexport const combination = latexfmt`\\binom{n}{k} = \\frac{n!}{k!(n-k)!}`\n\nexport const complex_trig = latexfmt`re^{i\\theta} = r(\\cos\\theta + i\\sin\\theta)`\n\nexport const demorgans = latexfmt`\\lnot (p \\land q) \\iff (\\lnot p \\lor \\lnot q)`\n\nexport const dot_product = latexfmt`\\langle 2,6,-1\\rangle \\cdot \\langle -3,4,5\\rangle = 13`\n\nexport const fundamental_calculus = latexfmt`\\int_a^b f'(x)dx = f(b) - f(a)`\n\nexport const geometric_series = latexfmt`\\sum_{i=1}^n\\left(a\\cdot r^n\\right)\n= \\frac{a(1 - r^n)}{1-r}`\n\nexport const geometry = latexfmt`\\triangle{ABC} \\cong \\triangle{DEF}\n\\implies m\\angle{CAB} = m\\angle{FDE}`\n\nexport const identity = latexfmt`e^{i\\pi}+1=0`\n\nexport const law_of_sines = latexfmt`\\frac{\\sin A}{a} = \\frac{\\sin B}{b} = \\frac{\\sin C}{c}`\n\nexport const limit_delta_epsilon = latexfmt`\\forall\\ \\epsilon > 0, x \\in \\mathbb{R} \\\\\n\\exists\\ \\delta > 0 \\text{ such that } \\\\\n0 < |x-c| < \\delta \\implies |f(x) - L| < \\epsilon`\n\nexport const matrix_determinant = latexfmt`\\left|\\begin{array}{c c c}\n  a & b & c \\\\\n  d & e & f \\\\\n  g & h & i \\\\\n\\end{array}\\right|\n= aei + bfg + cdh - afh - bdi - ceg`\n\nexport const matrix_multiplication = latexfmt`\\left[\n  \\begin{array}{rr}\n    1 & -3 \\\\\n    2 & 5\n  \\end{array}\n\\right]\n\\cdot\n\\left[\n  \\begin{array}{r}\n    x \\\\\n    y\n  \\end{array}\n\\right]\n=\n\\left[\n  \\begin{array}{r}\n    x-3y \\\\\n    2x+5y\n  \\end{array}\n\\right]`\n\nexport const perpendicular = latexfmt`\\overleftrightarrow{AB} \\perp \\overline{BC} \\iff m\\angle{ABC} = 90^\\circ`\n\nexport const piecewise = latexfmt`a_{n+1} = \\left\\{\n  \\begin{array}{l l}\n    a_n \\div 2 & \\text{ if $a_n$ is even} \\\\\n      3a_n + 1 & \\text{ if $a_n$ is odd} \\\\\n  \\end{array}\n\\right.`\n\nexport const quadratic_formula = latexfmt`x = \\frac{-b \\pm \\sqrt{b^2 - 4ac}}{2a}`\n\nexport const slope = latexfmt`\\frac{\\text{rise}}{\\text{run}} = \n\\frac{\\Delta y}{\\Delta x} = \n\\frac{y_2 - y_1}{x_2 - x_1}`\n\nexport const sum_of_cubes = latexfmt`(a^3 + b^3) = (a + b)(a^2 - ab + b^2)`\n\nexport const taylor_series = latexfmt`\\sum_{n=0}^{\\infty}\\frac{f^{(n)}(a)}{n!}(x-a)^n`\n\nexport const vector = latexfmt`\\vec{u} = \\langle x,y \\rangle , \\quad\n|\\vec{u}| = \\sqrt{x^2 + y^2}`","import React from 'react'\nimport styles from '../FormulaEditor.module.css'\nimport { latexExamples } from '../../../utils'\n\nlet examples = [];\n\nfunction getRandomFormula() {\n  if (examples.length === 0) {\n    for (const ex in latexExamples) {\n      const i = Math.floor(Math.random() * (1+examples.length))\n      examples.splice(i, 0, latexExamples[ex])\n    }\n  }\n  return examples.pop();\n}\n\nfunction typeFormula(fmla) {\n  let a = document.getElementById('formulaInput');\n  a.value = fmla;\n  return fmla;\n}\n\nconst RandomExampleButton = ({ setFormula }) => {\n  const setRandomFormula = () => setFormula(typeFormula(getRandomFormula()));\n  return (\n    <div className={styles.optionRandomExample}>\n      <button onClick={setRandomFormula}>Random Example</button>\n    </div>\n  )\n}\n\nexport default RandomExampleButton","export const SET_FORMULA = 'SET_FORMULAEDITOR_FORMULA'\nexport const SET_DISPLAYSIZE = 'SET_FORMULAEDITOR_DISPLAYSIZE'\nexport const TOGGLE_DISPLAYMODE = 'TOGGLE_FORMULAEDITOR_DISPLAYMODE'\nexport const TOGGLE_AUTOSCALE = 'TOGGLE_FORMULAEDITOR_AUTOSCALE'\nexport const SCALE_DISPLAYSIZE = 'SCALE_FORMULAEDITOR_DISPLAYSIZE'\nexport const SET_DISPLAYPOSITION = 'SET_FORMULAEDITOR_DISPLAYPOSITION'\n\nexport const setFormula = formula => ({\n  type: SET_FORMULA,\n  payload: formula,\n})\n\nexport const setDisplaySize = size => ({\n  type: SET_DISPLAYSIZE,\n  payload: size,\n})\n\nexport const toggleDisplayMode = () => ({\n  type: TOGGLE_DISPLAYMODE,\n})\n\nexport const setDisplayPosition = position => ({\n  type: SET_DISPLAYPOSITION,\n  payload: position,\n})","import FormulaEditor from './FormulaEditor'\n\nexport default FormulaEditor","import React from 'react'\nimport { connect } from 'react-redux'\nimport styles from './FormulaEditor.module.css'\n\nimport {\n  DisplayModeCheck,\n  DisplaySizeSlider,\n  DisplayPositionSelect,\n  FormulaDisplay,\n  FormulaInput,\n  RandomExample,\n} from './dumbcomponents'\n\nimport { \n  setFormula,\n  setDisplaySize,\n  setDisplayPosition,\n  toggleDisplayMode,\n  //toggleAutoScale,\n  //scaleDisplaySize,\n} from '../../actions/formulaEditor'\n\n/*\nfunction calcResizeToFitFactor() {\n  const currentWidth = document.getElementsByClassName(styles.formulaDisplay)[0].getAttribute(\"width\");\n  const targetWidth = document.getElementsByClassName(styles.formulaDisplayWrapper)[0].getAttribute(\"width\");\n  return targetWidth / currentWidth;\n}\n*/\n\nconst FormulaEditor = ({\n  formula,\n  displayMode,\n  displaySize,\n  displayPosition,\n  setDisplaySize,\n  setFormula,\n  toggleDisplayMode,\n  setDisplayPosition,\n  //autoScale,\n  //scaleDisplaySize,\n  //toggleAutoScale,\n}) => {\n  const className = (displayPosition === 'below') ? styles.formulaWrapper : styles.formulaWrapperRight;\n  return (\n    <div className={className}>\n      <div className={styles.title}>Formula Editor (LaTeX)</div>\n      <div className={styles.formulaOptions}>\n        <DisplayModeCheck \n          displayMode={displayMode} \n          toggleDisplayMode={toggleDisplayMode} />\n        <DisplaySizeSlider \n          setDisplaySize={setDisplaySize} />\n        <RandomExample\n          setFormula={setFormula} />\n      </div>\n      <FormulaInput \n        formula={formula}\n        setFormula={setFormula} />\n      <div className={styles.formulaDisplayWrapper}>\n        <FormulaDisplay \n          formula={formula}\n          displayMode={displayMode}\n          displaySize={displaySize} />\n      </div>\n    </div>\n  )\n}\n\nconst mapState = state => ({\n  formula: state.formulaEditor.formula,\n  displayMode: state.formulaEditor.displayMode,\n  displaySize: state.formulaEditor.displaySize,\n  displayPosition: state.formulaEditor.displayPosition,\n  //autoScale: state.formulaEditor.autoScale,\n})\n\nconst mapDispatch = dispatch => ({\n  setDisplaySize: val => dispatch(setDisplaySize(val)),\n  setDisplayPosition: pos => dispatch(setDisplayPosition(pos)),\n  setFormula: fmla => dispatch(setFormula(fmla)),\n  toggleDisplayMode: () => dispatch(toggleDisplayMode()),\n  //toggleAutoScale: () => dispatch(toggleAutoScale()),\n  //scaleDisplaySize: factor => dispatch(scaleDisplaySize(factor)),\n})\n\nexport default connect(mapState, mapDispatch)(FormulaEditor)\n","import React from 'react';\nimport FormulaEditor from './components/FormulaEditor'\nimport styles from './App.module.css'\n\nconst App = () => (\n  <div className={styles.App}>\n    <FormulaEditor />\n  </div>\n)\n\nexport default App;","import {\n  SET_FORMULA,\n  SET_DISPLAYSIZE,\n  SET_DISPLAYPOSITION,\n  TOGGLE_DISPLAYMODE,\n  TOGGLE_AUTOSCALE,\n  SCALE_DISPLAYSIZE,\n} from '../actions/formulaEditor'\n\nconst initialState = {\n  'formula': '',\n  'displayMode': true,\n  'displaySize': 1.5,\n  'displayPosition': 'below',\n  'autoScale': false,\n}\n\nfunction formulaEditor(state=initialState, action) {\n  switch (action.type) {\n    case SET_FORMULA:\n      return {\n        ...state, \n        formula: action.payload, \n      }\n    case SET_DISPLAYSIZE:\n      return {\n        ...state, \n        displaySize: action.payload,\n      }\n    case TOGGLE_DISPLAYMODE:\n      return {\n        ...state, \n        displayMode: !state.displayMode,\n      }\n    case SET_DISPLAYPOSITION:\n      return {\n        ...state,\n        displayPosition: action.payload,\n      }\n    case TOGGLE_AUTOSCALE:\n      return {\n        ...state,\n        autoScale: !state.autoScale,\n      }\n    case SCALE_DISPLAYSIZE:\n      return {\n        ...state,\n        displaySize: state.displaySize * action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport default formulaEditor\n","import { combineReducers } from 'redux'\nimport formulaEditor from './formulaEditor'\n\nconst rootReducer = combineReducers({\n  'formulaEditor': formulaEditor,\n})\n\nexport default rootReducer","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\nimport App from './App';\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer)\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister();"],"sourceRoot":""}